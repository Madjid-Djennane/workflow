name: Manual deploy to staging
on:
  workflow_dispatch:

jobs:
  greet:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
        token: ${{ github.token }}

    - name: Create release branch
      run: |
        git fetch -p
        VERSION=$(git describe --tags `git rev-list --tags --max-count=1`)
        VERSION_BITS=(${VERSION//./ })
        MAJOR=${VERSION_BITS[0]}
        MINOR=${VERSION_BITS[1]}
        RELEASE_NAME="release_$MAJOR.$MINOR"
        git checkout main
        echo "current release >>" $RELEASE_NAME
        git checkout -b $(echo $RELEASE_NAME) main
        git push origin $(echo $RELEASE_NAME)


    - name: Set second last & current release branches names in github env
      run: |
        git fetch -p
        branches_list_str=$(git branch -r --list --sort=committerdate "*release_v*")
        echo "branches list >>" $branches_list_str
        branches_list=(${branches_list_str//\ / })
        current_release=${branches_list[-1]}
        current_release_name=(${current_release//\// })
        echo "current=${current_release_name[-1]}" >> $GITHUB_ENV
        previous_release=${branches_list[-2]}
        previous_release_name=(${previous_release//\// })
        echo "previous=${previous_release_name[-1]}" >> $GITHUB_ENV

    - name: Create pull-request second release to current release
      uses: repo-sync/pull-request@v2
      with:
        source_branch: "${{ env.previous }}"
        destination_branch: "${{ env.current }}"
        pr_title: "Pulling ${{ env.previous }} into ${{ env.current }}"
        pr_body: ":crown: *An automated PR*"
        pr_allow_empty: true
        github_token: ${{ secrets.GITHUB_TOKEN }}
